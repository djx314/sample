@()
package net.scalax.simple.nat.adt.impl
import net.scalax.simple.nat.adt.TypeAdt

@buildHList(start: Int, i1: Int) = { (@for(i2 <- start to i1) { @if(i2 > start) { , I@{i2} } else { I@{i2} } }) }

trait TypeAdtAlias {
    @for(i1 <- 1 to 22) {
        type TypeOptions@{i1}[A, @for(i2 <- 1 to i1) { @if(i2 == 1) { I@{i2} } else { , I@{i2} } }] = TypeAdt[A, @buildHList(1, i1)]
        type TypeOptions@{i1}F[F[_], A, @for(i2 <- 1 to i1) { @if(i2 == 1) { I@{i2} } else { , I@{i2} } }] = TypeAdt[F[A], @buildHList(1, i1)]
    }
}