@()
package net.scalax.simple.adt
package impl

@buildHListImpl(start: Int, i1: Int) = { (@for(i2 <- start to i1) { @if(i2 > start) { , I@{i2} }else{ I@{i2} } }) }

@buildHList(start: Int, i1: Int) = { @if(i1 == 1) { I1 *: EmptyTuple } else { @buildHListImpl(start, i1) } }

trait TypeAdtAlias {
    @for(i1 <- 1 to 22) {
        type Options@{i1}[A, @for(i2 <- 1 to i1) { @if(i2 == 1) { I@{i2} } else { , I@{i2} } }] = TypeAdtApply.Aux[A, @buildHList(1, i1), ConfirmSucceed]
    }
}